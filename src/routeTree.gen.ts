/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AssignImport } from './routes/assign'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsIndexImport } from './routes/settings.index'
import { Route as CreateIndexImport } from './routes/create.index'
import { Route as SettingsHelpImport } from './routes/settings.help'
import { Route as SettingsAdvancedImport } from './routes/settings.advanced'
import { Route as SettingsAboutImport } from './routes/settings.about'
import { Route as CreateTextImport } from './routes/create.text'
import { Route as CreateSearchImport } from './routes/create.search'
import { Route as CreateNfcImport } from './routes/create.nfc'
import { Route as CreateMappingsImport } from './routes/create.mappings'

// Create/Update Routes

const AssignRoute = AssignImport.update({
  path: '/assign',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any)

const CreateIndexRoute = CreateIndexImport.update({
  path: '/create/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsHelpRoute = SettingsHelpImport.update({
  path: '/settings/help',
  getParentRoute: () => rootRoute,
} as any)

const SettingsAdvancedRoute = SettingsAdvancedImport.update({
  path: '/settings/advanced',
  getParentRoute: () => rootRoute,
} as any)

const SettingsAboutRoute = SettingsAboutImport.update({
  path: '/settings/about',
  getParentRoute: () => rootRoute,
} as any)

const CreateTextRoute = CreateTextImport.update({
  path: '/create/text',
  getParentRoute: () => rootRoute,
} as any)

const CreateSearchRoute = CreateSearchImport.update({
  path: '/create/search',
  getParentRoute: () => rootRoute,
} as any)

const CreateNfcRoute = CreateNfcImport.update({
  path: '/create/nfc',
  getParentRoute: () => rootRoute,
} as any)

const CreateMappingsRoute = CreateMappingsImport.update({
  path: '/create/mappings',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/assign': {
      id: '/assign'
      path: '/assign'
      fullPath: '/assign'
      preLoaderRoute: typeof AssignImport
      parentRoute: typeof rootRoute
    }
    '/create/mappings': {
      id: '/create/mappings'
      path: '/create/mappings'
      fullPath: '/create/mappings'
      preLoaderRoute: typeof CreateMappingsImport
      parentRoute: typeof rootRoute
    }
    '/create/nfc': {
      id: '/create/nfc'
      path: '/create/nfc'
      fullPath: '/create/nfc'
      preLoaderRoute: typeof CreateNfcImport
      parentRoute: typeof rootRoute
    }
    '/create/search': {
      id: '/create/search'
      path: '/create/search'
      fullPath: '/create/search'
      preLoaderRoute: typeof CreateSearchImport
      parentRoute: typeof rootRoute
    }
    '/create/text': {
      id: '/create/text'
      path: '/create/text'
      fullPath: '/create/text'
      preLoaderRoute: typeof CreateTextImport
      parentRoute: typeof rootRoute
    }
    '/settings/about': {
      id: '/settings/about'
      path: '/settings/about'
      fullPath: '/settings/about'
      preLoaderRoute: typeof SettingsAboutImport
      parentRoute: typeof rootRoute
    }
    '/settings/advanced': {
      id: '/settings/advanced'
      path: '/settings/advanced'
      fullPath: '/settings/advanced'
      preLoaderRoute: typeof SettingsAdvancedImport
      parentRoute: typeof rootRoute
    }
    '/settings/help': {
      id: '/settings/help'
      path: '/settings/help'
      fullPath: '/settings/help'
      preLoaderRoute: typeof SettingsHelpImport
      parentRoute: typeof rootRoute
    }
    '/create/': {
      id: '/create/'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/assign': typeof AssignRoute
  '/create/mappings': typeof CreateMappingsRoute
  '/create/nfc': typeof CreateNfcRoute
  '/create/search': typeof CreateSearchRoute
  '/create/text': typeof CreateTextRoute
  '/settings/about': typeof SettingsAboutRoute
  '/settings/advanced': typeof SettingsAdvancedRoute
  '/settings/help': typeof SettingsHelpRoute
  '/create': typeof CreateIndexRoute
  '/settings': typeof SettingsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/assign': typeof AssignRoute
  '/create/mappings': typeof CreateMappingsRoute
  '/create/nfc': typeof CreateNfcRoute
  '/create/search': typeof CreateSearchRoute
  '/create/text': typeof CreateTextRoute
  '/settings/about': typeof SettingsAboutRoute
  '/settings/advanced': typeof SettingsAdvancedRoute
  '/settings/help': typeof SettingsHelpRoute
  '/create': typeof CreateIndexRoute
  '/settings': typeof SettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/assign': typeof AssignRoute
  '/create/mappings': typeof CreateMappingsRoute
  '/create/nfc': typeof CreateNfcRoute
  '/create/search': typeof CreateSearchRoute
  '/create/text': typeof CreateTextRoute
  '/settings/about': typeof SettingsAboutRoute
  '/settings/advanced': typeof SettingsAdvancedRoute
  '/settings/help': typeof SettingsHelpRoute
  '/create/': typeof CreateIndexRoute
  '/settings/': typeof SettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/assign'
    | '/create/mappings'
    | '/create/nfc'
    | '/create/search'
    | '/create/text'
    | '/settings/about'
    | '/settings/advanced'
    | '/settings/help'
    | '/create'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/assign'
    | '/create/mappings'
    | '/create/nfc'
    | '/create/search'
    | '/create/text'
    | '/settings/about'
    | '/settings/advanced'
    | '/settings/help'
    | '/create'
    | '/settings'
  id:
    | '__root__'
    | '/'
    | '/assign'
    | '/create/mappings'
    | '/create/nfc'
    | '/create/search'
    | '/create/text'
    | '/settings/about'
    | '/settings/advanced'
    | '/settings/help'
    | '/create/'
    | '/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AssignRoute: typeof AssignRoute
  CreateMappingsRoute: typeof CreateMappingsRoute
  CreateNfcRoute: typeof CreateNfcRoute
  CreateSearchRoute: typeof CreateSearchRoute
  CreateTextRoute: typeof CreateTextRoute
  SettingsAboutRoute: typeof SettingsAboutRoute
  SettingsAdvancedRoute: typeof SettingsAdvancedRoute
  SettingsHelpRoute: typeof SettingsHelpRoute
  CreateIndexRoute: typeof CreateIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AssignRoute: AssignRoute,
  CreateMappingsRoute: CreateMappingsRoute,
  CreateNfcRoute: CreateNfcRoute,
  CreateSearchRoute: CreateSearchRoute,
  CreateTextRoute: CreateTextRoute,
  SettingsAboutRoute: SettingsAboutRoute,
  SettingsAdvancedRoute: SettingsAdvancedRoute,
  SettingsHelpRoute: SettingsHelpRoute,
  CreateIndexRoute: CreateIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/assign",
        "/create/mappings",
        "/create/nfc",
        "/create/search",
        "/create/text",
        "/settings/about",
        "/settings/advanced",
        "/settings/help",
        "/create/",
        "/settings/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/assign": {
      "filePath": "assign.tsx"
    },
    "/create/mappings": {
      "filePath": "create.mappings.tsx"
    },
    "/create/nfc": {
      "filePath": "create.nfc.tsx"
    },
    "/create/search": {
      "filePath": "create.search.tsx"
    },
    "/create/text": {
      "filePath": "create.text.tsx"
    },
    "/settings/about": {
      "filePath": "settings.about.tsx"
    },
    "/settings/advanced": {
      "filePath": "settings.advanced.tsx"
    },
    "/settings/help": {
      "filePath": "settings.help.tsx"
    },
    "/create/": {
      "filePath": "create.index.tsx"
    },
    "/settings/": {
      "filePath": "settings.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
